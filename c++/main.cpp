#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}
#include <graphics.h>
#include <conio.h>
#include <math.h>
 double k3[50][3];
 double k2[50][2];
 int k2i[50][2];
double l_kabine = 1/2.;
double alfa = M_PI/4;
void initprism()
{
    // B HARFI
     k3[1][1]=50;                    k3[1][2]=50;                k3[1][3]=0;
     k3[2][1]=125;                   k3[2][2]=50;                k3[2][3]=0;
     k3[3][1]=150;                    k3[3][2]=75;               k3[3][3]=0;
      k3[4][1]=150;                  k3[4][2]=125;              k3[4][3]=0;
      k3[5][1]=125;                  k3[5][2]=150;              k3[5][3]=0;
      k3[6][1]=150;                 k3[6][2]=175;              k3[6][3]=0;
      k3[7][1]=150;                  k3[7][2]=225;               k3[7][3]=0;
      k3[8][1]=125;                  k3[8][2]=250;              k3[8][3]=0;
      k3[9][1]=50;                  k3[9][2]=250;              k3[9][3]=0;
      k3[10][1]=50;                  k3[10][2]=150;              k3[10][3]=0;

      //o harfi
      k3[11][1]=225;                    k3[11][2]=150;                k3[11][3]=0;
     k3[12][1]=275;                   k3[12][2]=150;                k3[12][3]=0;
     k3[13][1]=300;                    k3[13][2]=175;               k3[13][3]=0;
      k3[14][1]=300;                  k3[14][2]=225;              k3[14][3]=0;
      k3[15][1]=275;                  k3[15][2]=250;              k3[15][3]=0;
      k3[16][1]=225;                 k3[16][2]=250;              k3[16][3]=0;
      k3[17][1]=200;                  k3[17][2]=225;               k3[17][3]=0;
      k3[18][1]=200;                  k3[18][2]=175;              k3[18][3]=0;

      //b harfi
      k3[19][1]=350;                    k3[19][2]=50;                k3[19][3]=0;
     k3[20][1]=350;                   k3[20][2]=150;                k3[20][3]=0;
     k3[21][1]=350;                    k3[21][2]=250;               k3[21][3]=0;
      k3[22][1]=425;                  k3[22][2]=250;              k3[22][3]=0;
      k3[23][1]=450;                  k3[23][2]=225;              k3[23][3]=0;
      k3[24][1]=450;                 k3[24][2]=175;              k3[24][3]=0;
      k3[25][1]=425;                  k3[25][2]=150;               k3[25][3]=0;

      //u harfi
      k3[26][1]=500;                    k3[26][2]=150;                 k3[26][3]=0;
      k3[27][1]=500;                    k3[27][2]=225;                k3[27][3]=0;
      k3[28][1]=525;                    k3[28][2]=250;                k3[28][3]=0;
      k3[29][1]=575;                    k3[29][2]=250;                k3[29][3]=0;
      k3[30][1]=600;                    k3[30][2]=225;                k3[30][3]=0;
      k3[31][1]=600;                    k3[31][2]=150;                k3[31][3]=0;
      k3[32][1]=600;                    k3[32][2]=250;                k3[32][3]=0;

       //r harfi
      k3[33][1]=650;                    k3[33][2]=150;                 k3[33][3]=0;
      k3[34][1]=650;                    k3[34][2]=175;                k3[34][3]=0;
      k3[35][1]=650;                    k3[35][2]=250;                k3[35][3]=0;
      k3[36][1]=675;                    k3[36][2]=150;                k3[36][3]=0;
      k3[37][1]=700;                    k3[37][2]=175;                k3[37][3]=0;

      //B soyasi
      k3[38][1]=75;                    k3[38][2]=25;                k3[38][3]=0;
      k3[39][1]=150;                    k3[39][2]=25;                k3[39][3]=0;
      k3[40][1]=175;                    k3[40][2]=50;                k3[40][3]=0;
      k3[41][1]=175;                    k3[41][2]=100;                k3[41][3]=0;
      k3[42][1]=175;                    k3[42][2]=150;                k3[42][3]=0;
      k3[43][1]=175;                    k3[43][2]=200;                k3[43][3]=0;
}
void kabine()
{
     int i;
     for(i=1;i<=50;i++)
     {k2[i][1] = k3[i][1] + l_kabine * cos(alfa) * k3[i][3];
       k2[i][2] = k3[i][2] + l_kabine * sin(alfa) * k3[i][3];
     }
}
void relation()
{
     int i, j;
     for(j=1;j<=2;j++)
     {
      for(i=1;i<=50;i++)
      k2i[i][j]=int(k2[i][j]);
     }
}
void perenos(int x,int y)
{
     int i;
     for(i=1;i<=50;i++)
     {
      k2i[i][1]=k2i[i][1]+x;
      k2i[i][2]=k2i[i][2]+y;
     }
}
void lineprism()
{
     setcolor(YELLOW);
line(k2i[1][1],k2i[1][2],k2i[2][1],k2i[2][2]);
line(k2i[2][1],k2i[2][2],k2i[3][1],k2i[3][2]);
line(k2i[3][1],k2i[3][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[5][1],k2i[5][2]);
line(k2i[5][1],k2i[5][2],k2i[6][1],k2i[6][2]);
line(k2i[6][1],k2i[6][2],k2i[7][1],k2i[7][2]);
line(k2i[7][1],k2i[7][2],k2i[8][1],k2i[8][2]);
line(k2i[8][1],k2i[8][2],k2i[9][1],k2i[9][2]);
line(k2i[9][1],k2i[9][2],k2i[10][1],k2i[10][2]);
line(k2i[10][1],k2i[10][2],k2i[1][1],k2i[1][2]);
line(k2i[10][1],k2i[10][2],k2i[5][1],k2i[5][2]);



setcolor(RED);
line(k2i[11][1],k2i[11][2],k2i[12][1],k2i[12][2]);
line(k2i[12][1],k2i[12][2],k2i[13][1],k2i[13][2]);
line(k2i[13][1],k2i[13][2],k2i[14][1],k2i[14][2]);
line(k2i[14][1],k2i[14][2],k2i[15][1],k2i[15][2]);
line(k2i[15][1],k2i[15][2],k2i[16][1],k2i[16][2]);
line(k2i[16][1],k2i[16][2],k2i[17][1],k2i[17][2]);
line(k2i[17][1],k2i[17][2],k2i[18][1],k2i[18][2]);
line(k2i[18][1],k2i[18][2],k2i[11][1],k2i[11][2]);

setcolor(GREEN);
line(k2i[19][1],k2i[19][2],k2i[20][1],k2i[20][2]);
line(k2i[20][1],k2i[20][2],k2i[21][1],k2i[21][2]);
line(k2i[21][1],k2i[21][2],k2i[22][1],k2i[22][2]);
line(k2i[22][1],k2i[22][2],k2i[23][1],k2i[23][2]);
line(k2i[23][1],k2i[23][2],k2i[24][1],k2i[24][2]);
line(k2i[24][1],k2i[24][2],k2i[25][1],k2i[25][2]);
line(k2i[25][1],k2i[25][2],k2i[20][1],k2i[20][2]);

setcolor(BLUE);
line(k2i[26][1],k2i[26][2],k2i[27][1],k2i[27][2]);
line(k2i[27][1],k2i[27][2],k2i[28][1],k2i[28][2]);
line(k2i[28][1],k2i[28][2],k2i[29][1],k2i[29][2]);
line(k2i[29][1],k2i[29][2],k2i[30][1],k2i[30][2]);
line(k2i[30][1],k2i[30][2],k2i[31][1],k2i[31][2]);
line(k2i[30][1],k2i[30][2],k2i[32][1],k2i[32][2]);

setcolor(WHITE);
line(k2i[33][1],k2i[33][2],k2i[34][1],k2i[34][2]);
line(k2i[34][1],k2i[34][2],k2i[35][1],k2i[35][2]);
line(k2i[34][1],k2i[34][2],k2i[36][1],k2i[36][2]);
line(k2i[36][1],k2i[36][2],k2i[37][1],k2i[37][2]);

setcolor(WHITE);
line(k2i[1][1],k2i[1][2],k2i[38][1],k2i[38][2]);
line(k2i[38][1],k2i[38][2],k2i[39][1],k2i[39][2]);
line(k2i[39][1],k2i[39][2],k2i[40][1],k2i[40][2]);
line(k2i[40][1],k2i[40][2],k2i[41][1],k2i[41][2]);
line(k2i[41][1],k2i[41][2],k2i[4][1],k2i[4][2]);
line(k2i[4][1],k2i[4][2],k2i[42][1],k2i[42][2]);
line(k2i[42][1],k2i[42][2],k2i[43][1],k2i[43][2]);
line(k2i[43][1],k2i[43][2],k2i[7][1],k2i[7][2]);
line(k2i[6][1],k2i[6][2],k2i[42][1],k2i[42][2]);
line(k2i[3][1],k2i[3][2],k2i[40][1],k2i[40][2]);
line(k2i[2][1],k2i[2][2],k2i[39][1],k2i[39][2]);



}
int main()
{
      initwindow(800, 300);
      initprism();
      kabine();
      relation();
      lineprism();
        getch();
        cleardevice();
      perenos(300,200);
      lineprism();
      getch();
      closegraph();}